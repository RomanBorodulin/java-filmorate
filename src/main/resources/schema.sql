CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar(255) UNIQUE NOT NULL,
  login varchar(255) UNIQUE NOT NULL,
  name varchar(255),
  birthday date NOT NULL
);

CREATE TABLE IF NOT EXISTS ratings (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(255)
);

CREATE TABLE IF NOT EXISTS films (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(255) NOT NULL,
  description varchar(200),
  release_date date NOT NULL,
  duration int NOT NULL,
  rating_id int,
  FOREIGN KEY (rating_id) REFERENCES ratings (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS likes (
  film_id bigint,
  user_id bigint,
  PRIMARY KEY (film_id, user_id),
  FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friends (
  user_id bigint,
  friend_id bigint,
  friendship boolean,
  PRIMARY KEY (user_id, friend_id),
  FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
  FOREIGN KEY (friend_id) REFERENCES users (id) ON DELETE CASCADE,
  CHECK(user_id <> friend_id)
);

CREATE TABLE IF NOT EXISTS genres (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(255)
);

CREATE TABLE IF NOT EXISTS film_genres (
  film_id bigint,
  genre_id int,
  PRIMARY KEY (film_id, genre_id),
  FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
  FOREIGN KEY (genre_id) REFERENCES genres (id) ON DELETE CASCADE
);